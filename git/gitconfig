# User interface
[core]
  pager = delta
  quotepath = false

[interactive]
  diffFilter = delta --color-only

[delta]
  navigate = true
  light = false
  side-by-side = true
  line-numbers = true

[merge]
  conflictstyle = diff3

[diff]
  colorMoved = default

# Aliases
[alias]
  # Amend the currently staged files to the latest commit.
  amend = commit --amend --reuse-message=HEAD

  # Undone git amend
  unamend = reset --soft HEAD@{1}

  # Interactive rebase with the given number of latest commits.
  reb = "!r() { git rebase -i HEAD~$1; }; r"

  # Returns main (default) branch name
  main-branch = !"git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@' "

  # Returns current branch name
  current-branch = !"git branch | grep --regexp '*.*' | sed 's/* //g'"

  # Simple archivize repo. within last commit as .zip
  ark = { archive --format=zip HEAD --output=$1 }

  # Allows to manually merge master - to keep local changes run `git restore --staged` (or grst oh-my-zsh alias) with path for desired files
  # then run `git commit`
  merge-master = !"git checkout $(git main-branch) && git pull origin/$(git main-branch) && git checkout - && git merge $(git main-branch) --no-commit --fast-forward"

# Credentials
[user]
  email = bartusiekkrosno@poczta.fm
  name = bartq98

[credential "https://github.com"]
  helper = 
  helper = !/usr/bin/gh auth git-credential

[credential "https://gist.github.com"]
  helper = 
  helper = !/usr/bin/gh auth git-credential
